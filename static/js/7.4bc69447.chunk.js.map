{"version":3,"sources":["Views/LoginView.jsx"],"names":["LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","props","useSpring","from","opacity","transform","to","delay","style","overflow","div","component","sx","m","noValidate","onSubmit","e","preventDefault","authOperations","logIn","toast","error","autoComplete","variant","type","value","onChange","event","target","pattern","title","required","size","transition","Zoom","autoClose"],"mappings":"iTAae,SAASA,IACtB,IAAMC,EAAWC,cACjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEOC,EAAQC,oBAAU,CACvBC,KAAM,CACJC,QAAS,EAAIC,UAAY,0BAE3BC,GAAI,CAAEF,QAAS,GAAKC,UAAW,sBAC/BE,MAAM,KAsBR,OACE,sBAAKC,MAAO,CAAEC,SAAS,UAAvB,UACG,cAAC,WAASC,IAAV,CAAcF,MAAOP,EAArB,SACK,eAAC,IAAD,CACIU,UAAU,OACVC,GAAI,CACA,kBAAmB,CAAEC,EAAG,IAE5BC,YAAU,EACVC,SAlBO,SAAAC,GAEnB,OADAA,EAAEC,iBACGpB,EACAE,GAELL,EAASwB,IAAeC,MAAM,CAAEtB,QAAOE,cACvCD,EAAS,SACTE,EAAY,KAJUoB,IAAMC,MAAM,6BADfD,IAAMC,MAAM,2BAiBnBC,aAAa,MAPjB,UAQI,eAAC,IAAD,CAAaC,QAAQ,SAArB,UACI,cAAC,IAAD,oBACA,cAAC,IAAD,CACIC,KAAK,QACLC,MAAO5B,EACP6B,SAjCI,SAACC,GACzB7B,EAAS6B,EAAMC,OAAOH,QAiCFI,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAEhB,eAAC,IAAD,CAAaR,QAAQ,WAArB,UACI,cAAC,IAAD,uBACA,cAAC,IAAD,CAEIC,KAAK,WACLC,MAAO1B,EACP2B,SAzCQ,SAACC,GAC7B3B,EAAY2B,EAAMC,OAAOH,aA0Cb,cAAC,IAAD,CAAQF,QAAQ,YAAYC,KAAK,SAASQ,KAAK,SAA/C,yBAGV,cAAC,IAAD,CAAgBC,WAAYC,IAAMC,UAAW","file":"static/js/7.4bc69447.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from '../redux/auth';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Input from '@mui/material/Input';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport { ToastContainer, toast, Zoom } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useSpring,animated } from 'react-spring';\r\n\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n   const props = useSpring({\r\n    from: {\r\n      opacity :0 , transform : 'translate(-1000px,0px)'\r\n    },\r\n    to: { opacity: 0.8, transform: 'translate(0px,0px)', },\r\n    delay:50,\r\n    \r\n  })\r\n\r\n  \r\n  const handleChangeEmail = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n   const handleChangePassword = (event) => {\r\n    setPassword(event.target.value);\r\n    };\r\n    \r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (!email) return toast.error('Please input email !!!');\r\n    if (!password) return toast.error('Please input password !!!');\r\n\r\n    dispatch(authOperations.logIn({ email, password }));\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n  return (\r\n    <div style={{ overflow:'hidden'}}>\r\n       <animated.div style={props}>\r\n            <Box\r\n                component=\"form\"\r\n                sx={{\r\n                    '& > :not(style)': { m: 5 },\r\n                }}\r\n                noValidate\r\n                onSubmit={handleSubmit}\r\n                autoComplete=\"off\">\r\n                <FormControl variant='filled'>\r\n                    <InputLabel>Email</InputLabel>\r\n                    <Input\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={handleChangeEmail}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required/>\r\n                </FormControl>\r\n                <FormControl variant=\"standard\">\r\n                    <InputLabel>Password</InputLabel>\r\n                    <Input\r\n                        \r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={handleChangePassword} />\r\n                </FormControl>\r\n                <Button variant=\"contained\" type=\"submit\" size=\"medium\">Log in</Button>\r\n      </Box>\r\n      </animated.div>\r\n      <ToastContainer transition={Zoom} autoClose={2000} />\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}